{"version":3,"file":"static/js/658.696d91f9.chunk.js","mappings":"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","sources":["components/HomeMoviesItem/home-movie-item.styled.jsx","components/HomeMoviesItem/HomeMoviesItem.jsx","components/HomeMoviesList/home-movies.styled.jsx","components/HomeMoviesList/HomeMoviesList.jsx","components/Section/section.styled.jsx","components/Section/Section.jsx","components/SearchForm/search-form.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","shared/Loader/Loader.jsx","shared/services/movies-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst MoviesItem = styled.li`\n  padding: 5px 0;\n`;\n\nexport { MoviesItem };\n","import { Link, useLocation } from 'react-router-dom';\nimport { routes } from '../../routes';\nimport { MoviesItem } from './home-movie-item.styled';\n\nconst HomeMoviesItem = ({ title, name, id }) => {\n  const location = useLocation();\n\n  const currentPage =\n    location.pathname === routes.HOME ? routes.MOVIES : location.pathname;\n  return (\n    <>\n      <MoviesItem>\n        <Link to={`${currentPage}/${id}`} state={{ from: location }}>\n          {title || name}\n        </Link>\n      </MoviesItem>\n    </>\n  );\n};\n\nexport default HomeMoviesItem;\n","import styled from '@emotion/styled';\n\nconst HomeMovies = styled.ul`\n  margin-top: 0;\n  margin-bottom: 0;\n`;\nexport { HomeMovies };\n","// import PropTypes from 'prop-types';\n\nimport HomeMoviesItem from 'components/HomeMoviesItem/HomeMoviesItem';\n\nimport { HomeMovies } from './home-movies.styled';\n\nconst HomeMoviesList = ({ movies }) => {\n  return (\n    <HomeMovies>\n      {movies.map(({ id, title, name }) => (\n        <HomeMoviesItem key={id} title={title} name={name} id={id} />\n      ))}\n    </HomeMovies>\n  );\n};\n\nexport default HomeMoviesList;\n\nHomeMoviesList.defaultProps = {\n  movies: [],\n};\n\nHomeMoviesList.propTypes = {};\n","import styled from '@emotion/styled';\n\nconst SectionBox = styled.section`\n  padding: 15px;\n`;\n\nconst Container = styled.div``;\n\nexport { SectionBox, Container };\n","import PropTypes from 'prop-types';\n\nimport { SectionBox, Container } from './section.styled';\n\nconst Section = ({ children }) => {\n  return (\n    <SectionBox>\n      <Container>{children}</Container>\n    </SectionBox>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst SearchFormBox = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 2px solid coral;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nconst SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://cdn-icons-png.flaticon.com/512/954/954591.png');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nconst SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  margin-left: 10px;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport { SearchFormBox, SearchFormButton, SearchFormInput };\n","import { useState } from 'react';\n\nimport {\n  SearchFormBox,\n  SearchFormButton,\n  SearchFormInput,\n} from './search-form.styled';\n\nconst SearchForm = ({ handleFormSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleFormSubmit(query);\n  };\n\n  return (\n    <SearchFormBox onSubmit={handleSubmit}>\n      <SearchFormInput\n        value={query}\n        onChange={event => setQuery(event.target.value)}\n        type=\"text\"\n        placeholder=\"Enter name of movie...\"\n      />\n      <SearchFormButton type=\"submit\"></SearchFormButton>\n    </SearchFormBox>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Loader from 'shared/Loader/Loader';\nimport Section from 'components/Section/Section';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { getMovieByName } from 'shared/services/movies-api';\nimport HomeMoviesList from 'components/HomeMoviesList/HomeMoviesList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(null);\n  const [noResults, setNoResults] = useState(false);\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const getMoviesByQuery = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await getMovieByName(query);\n        if (!results.length) {\n          setNoResults(true);\n        }\n        setMovies(results);\n      } catch (response) {\n        setError(response.data.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMoviesByQuery();\n  }, [query]);\n\n  const handleFormSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <Section>\n        <SearchForm handleFormSubmit={handleFormSubmit} />\n        {isLoading && <Loader />}\n        {error && <p>Oops. Something goes wrong. Please try again.</p>}\n        {!movies && <p>There is no Results. Please check query parameters. </p>}\n        {!noResults && <HomeMoviesList movies={movies} />}\n      </Section>\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import { RotatingTriangles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <RotatingTriangles\n      colors={['#51E5FF', '#7DE2D1', '#FF7E6B']}\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    />\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e6316174af6222f390b70a86dd33c4fc',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/all/week', {});\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {});\n  return data;\n};\n\nexport const getMovieByNameCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieByNameReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await instance.get(`/search/movie?query=${query}`, {});\n  return data;\n};\n"],"names":["MoviesItem","styled","title","name","id","location","useLocation","currentPage","pathname","routes","to","state","from","HomeMovies","HomeMoviesList","movies","map","defaultProps","SectionBox","Container","children","SearchFormBox","SearchFormButton","SearchFormInput","handleFormSubmit","useState","query","setQuery","onSubmit","e","preventDefault","value","onChange","event","target","type","placeholder","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","error","setError","noResults","setNoResults","get","useEffect","getMoviesByQuery","getMovieByName","results","length","data","message","Section","Loader","colors","wrapperStyle","position","top","left","transform","instance","axios","baseURL","params","api_key","getTrendingMovies","getMovieById","getMovieByNameCast","getMovieByNameReviews"],"sourceRoot":""}