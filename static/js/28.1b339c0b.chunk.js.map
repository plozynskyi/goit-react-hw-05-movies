{"version":3,"file":"static/js/28.1b339c0b.chunk.js","mappings":"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","sources":["components/Section/section.styled.jsx","components/Section/Section.jsx","components/MovieDetails/movie-details.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/SingleMoviePage/single-movie-page.styled.jsx","pages/SingleMoviePage/SingleMoviePage.jsx","shared/Button/button.styled.jsx","shared/Button/Button.jsx","shared/Loader/Loader.jsx","shared/services/movies-api.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst SectionBox = styled.section`\n  padding: 15px;\n`;\n\nconst Container = styled.div``;\n\nexport { SectionBox, Container };\n","import PropTypes from 'prop-types';\n\nimport { SectionBox, Container } from './section.styled';\n\nconst Section = ({ children }) => {\n  return (\n    <SectionBox>\n      <Container>{children}</Container>\n    </SectionBox>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n`;\n\nconst MovieTitle = styled.a`\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nconst MoviePoster = styled.img`\n  width: 300px;\n  height: auto;\n`;\n\nconst MovieInfoBox = styled.div`\n  width: 500px;\n`;\n\nconst MovieInfo = styled.span`\n  font-weight: bold;\n`;\nexport { Wrapper, MovieInfoBox, MovieTitle, MoviePoster, MovieInfo };\n","import PropTypes from 'prop-types';\n\nimport {\n  Wrapper,\n  MovieInfoBox,\n  MovieTitle,\n  MoviePoster,\n  MovieInfo,\n} from './movie-details.styled';\n\nconst SingleMoviePage = ({ movie }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    homepage,\n    status,\n  } = movie;\n\n  let genresList = '';\n\n  if (Object.keys(movie).length) {\n    genresList = genres.map(({ name }, genre) => {\n      if (genre === genres.length - 1) {\n        return `${name}.`;\n      }\n      return `${name}, `;\n    });\n  }\n\n  return (\n    <Wrapper>\n      <MoviePoster\n        src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n        alt={original_title}\n      />\n      <MovieInfoBox>\n        <MovieTitle href={homepage} target=\"_blank\" rel=\"noopener noreferrer\">\n          {original_title}\n        </MovieTitle>\n        <p>\n          <MovieInfo>User Score - </MovieInfo>\n          {Number(vote_average).toFixed(2)} %\n        </p>\n        <p>\n          <MovieInfo>Overview:</MovieInfo> {overview}\n        </p>\n        <p>\n          <MovieInfo>Genres:</MovieInfo> {genresList}\n        </p>\n        <p>\n          <MovieInfo>Status:</MovieInfo> {status}\n        </p>\n        <p>\n          <MovieInfo>Release date:</MovieInfo> {release_date}\n        </p>\n      </MovieInfoBox>\n    </Wrapper>\n  );\n};\n\nexport default SingleMoviePage;\n\nSingleMoviePage.defaultProps = {\n  movies: [],\n};\n\nSingleMoviePage.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.number.isRequired,\n      poster: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      original_title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      vote_average: PropTypes.number,\n      overview: PropTypes.string,\n      homepage: PropTypes.string,\n      status: PropTypes.string,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nconst SingleMovieBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport { SingleMovieBox };\n","import { useState, useEffect, useCallback } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\n\nimport SingleMoviePage from 'components/MovieDetails/MovieDetails';\nimport { SingleMovieBox } from './single-movie-page.styled';\nimport Loader from 'shared/Loader/Loader';\n\nimport { getMovieById } from 'shared/services/movies-api';\nimport Section from 'components/Section/Section';\nimport Button from 'shared/Button/Button';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [noResults, setNoResults] = useState(false);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getMovieById(movieId);\n        if (!response.length) {\n          setNoResults(true);\n        }\n        setMovie(response);\n      } catch (response) {\n        setError(response.data.message);\n        console.log(response.data.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovie();\n  }, [movieId]);\n\n  const goBack = useCallback(() => navigate(from), [from, navigate]);\n\n  return (\n    <Section>\n      <SingleMovieBox>\n        {Boolean(isLoading) && <Loader />}\n        <Button onClick={goBack} type=\"button\">\n          Go back\n        </Button>\n        {error && <p>Oops. Something goes wrong. Please try again.</p>}\n        {!noResults && <p>There is no information. Please try again.</p>}\n        <SingleMoviePage movie={movie} />\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </SingleMovieBox>\n    </Section>\n  );\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\n\nconst ButtonMain = styled.button`\n  display: inline-block;\n  padding: 10px 15px;\n  background-color: #fff;\n  border: 2px solid #000;\n  border-radius: 5px;\n  font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;\n  cursor: pointer;\n  width: 100px;\n  font-size: 14px;\n  font-weight: bold;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    color: coral;\n    border: 2px solid coral;\n  }\n`;\n\nexport { ButtonMain };\n","import PropTypes from 'prop-types';\n\nimport { ButtonMain } from './button.styled';\n\nconst Button = ({ children, onClick, type }) => {\n  return (\n    <ButtonMain onClick={onClick} type={type}>\n      {children}\n    </ButtonMain>\n  );\n};\n\nexport default Button;\n\nButton.defaultProps = {\n  type: 'submit',\n};\n\nButton.prototypes = {\n  onClick: PropTypes.func.isRequired,\n  type: PropTypes.oneOf(['submit', 'button', 'reset']),\n  children: PropTypes.element.isRequired,\n};\n","import { RotatingTriangles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <RotatingTriangles\n      colors={['#51E5FF', '#7DE2D1', '#FF7E6B']}\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n    />\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e6316174af6222f390b70a86dd33c4fc',\n  },\n});\n\nexport const getTrendingMovies = async page => {\n  const { data } = await instance.get('/trending/all/week', {\n    params: {\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {});\n  return data;\n};\n\nexport const getMovieByNameCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieByNameReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const getMovieByName = async (query, page) => {\n  const { data } = await instance.get(`/search/movie?`, {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["SectionBox","styled","Container","children","Wrapper","MovieTitle","MoviePoster","MovieInfoBox","MovieInfo","SingleMoviePage","movie","poster_path","original_title","release_date","vote_average","overview","genres","homepage","status","genresList","Object","keys","length","map","genre","name","src","alt","href","target","rel","Number","toFixed","defaultProps","movies","SingleMovieBox","useState","setMovie","isLoading","setIsLoading","error","setError","noResults","setNoResults","navigate","useNavigate","from","useLocation","state","movieId","useParams","useEffect","getMovie","getMovieById","response","data","message","console","log","goBack","useCallback","Section","Boolean","Loader","Button","onClick","type","to","ButtonMain","prototypes","PropTypes","colors","wrapperStyle","position","top","left","transform","instance","axios","baseURL","params","api_key","getTrendingMovies","page","get","id","getMovieByNameCast","getMovieByNameReviews","getMovieByName","query","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}